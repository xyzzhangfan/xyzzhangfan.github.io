<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://xyzzhangfan.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://xyzzhangfan.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-04-01T04:46:43+00:00</updated><id>https://xyzzhangfan.github.io/feed.xml</id><title type="html">Fan’s Website</title><subtitle>Goals determine what you going to be! </subtitle><entry><title type="html">Convert data between FP32 and FP8(E4M3)</title><link href="https://xyzzhangfan.github.io/blog/2025/Convert_fp32_and_fp8_e4m3/" rel="alternate" type="text/html" title="Convert data between FP32 and FP8(E4M3)"/><published>2025-03-30T00:00:00+00:00</published><updated>2025-03-30T00:00:00+00:00</updated><id>https://xyzzhangfan.github.io/blog/2025/Convert_fp32_and_fp8_e4m3</id><content type="html" xml:base="https://xyzzhangfan.github.io/blog/2025/Convert_fp32_and_fp8_e4m3/"><![CDATA[<h2 id="goal">Goal</h2> <p>Open Computing Project (OCP) announced <a href="https://www.opencompute.org/documents/ocp-8-bit-floating-point-specification-ofp8-revision-1-0-2023-12-01-pdf-1">OCP 8-bit Floating Point Specification (OFP8)</a>. This post discusses how to convert FP32 to FP8(E4M3) and FP8(E4M3) back to FP32.</p> <h2 id="fp8e4m3-brief-intro">FP8(E4M3) brief intro</h2> <p>Similar to the IEEE 754, OFP8 representation consists of sign, exponent, and mantissa fields. For E4M3, it 1 bit for sign, 4 bits for exponent, and 3 bit for mantissa.</p> <p>OFP8 has 2 range: normal and sub-normal</p> <p>For normal number: $v = (-1)^S \times 2^{E - \text{bias}} \times (1 + 2^{-m} \times M)$</p> <p>For sub-normal number(where Exponent fileds are 0): $v = (-1)^S \times 2^{1 - \text{bias}} \times (0 + 2^{-m} \times M)$</p> <p>i.e. for normal value: 0_0001_000 –&gt; $(-1)^0 \times 2^{(1-7)} \times (1 + 2^{-3} \times 0)$, the bias for E4M3 is 7.</p> <p>The subnormal helps to extend the representive range for E4M3. Without subnormal, the minimum value E4M3 can represent is $2^{-7} \times (1 + 2^{-3})$. But in subnormal, the minimun value is $2^{-9}$.</p> <p>Here are some specific encoding for E4M3:</p> <table> <thead> <tr> <th>Category</th> <th>E4M3</th> </tr> </thead> <tbody> <tr> <td><strong>Infinities</strong></td> <td>N/A</td> </tr> <tr> <td><strong>NaN</strong></td> <td>S.1111.111₂</td> </tr> <tr> <td><strong>Zeros</strong></td> <td>S.0000.000₂</td> </tr> <tr> <td><strong>Max normal number</strong></td> <td>S.1111.110₂ = ±448</td> </tr> <tr> <td><strong>Min normal number</strong></td> <td>S.0001.000₂ = ±2⁻⁶</td> </tr> <tr> <td><strong>Max subnormal number</strong></td> <td>S.0000.111₂ = ±0.875 × 2⁻⁶</td> </tr> <tr> <td><strong>Min subnormal number</strong></td> <td>S.0000.001₂ = ±2⁻⁹</td> </tr> <tr> <td><strong>Dynamic range</strong></td> <td>18 binades</td> </tr> </tbody> </table> <h2 id="e4m3-to-fp32">E4M3 to FP32</h2> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="cp">#include</span> <span class="cpf">&lt;cmath&gt;</span><span class="cp">
</span> <span class="cp">#include</span> <span class="cpf">&lt;iomanip&gt;</span><span class="cp">
</span> <span class="cp">#include</span> <span class="cpf">&lt;cstdint&gt;</span><span class="cp">
</span> <span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span> <span class="cp">#include</span> <span class="cpf">&lt;cstdlib&gt;</span><span class="cp">
</span>
 <span class="kt">float</span> <span class="nf">E4M3ToFloat</span><span class="p">(</span><span class="kt">uint8_t</span> <span class="n">value</span><span class="p">)</span> <span class="p">{</span>
     <span class="kt">uint8_t</span> <span class="n">bits</span> <span class="o">=</span> <span class="o">*</span><span class="k">reinterpret_cast</span><span class="o">&lt;</span><span class="kt">uint8_t</span><span class="o">*&gt;</span><span class="p">(</span><span class="o">&amp;</span><span class="n">value</span><span class="p">);</span>
     <span class="k">if</span> <span class="p">((</span><span class="n">bits</span> <span class="o">&amp;</span> <span class="mh">0x7f</span><span class="p">)</span> <span class="o">==</span> <span class="mh">0x7f</span><span class="p">)</span> <span class="k">return</span> <span class="n">std</span><span class="o">::</span><span class="n">nanf</span><span class="p">(</span><span class="s">""</span><span class="p">);</span> <span class="c1">// Return Nan value</span>

     <span class="kt">uint32_t</span> <span class="n">sign</span> <span class="o">=</span>  <span class="p">(</span><span class="n">bits</span> <span class="o">&gt;&gt;</span> <span class="mi">7</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0x1</span><span class="p">;</span> <span class="c1">// 1-bit sign</span>
     <span class="kt">uint32_t</span> <span class="n">e4m3_exponent</span> <span class="o">=</span> <span class="p">(</span><span class="n">bits</span> <span class="o">&gt;&gt;</span> <span class="mi">3</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0xf</span><span class="p">;</span> <span class="c1">// 4 bit exp</span>
     <span class="kt">uint32_t</span> <span class="n">e4m3_mantissa</span> <span class="o">=</span> <span class="n">bits</span> <span class="o">&amp;</span> <span class="mh">0x7</span><span class="p">;</span> <span class="c1">// 3 bit mantissa</span>
     <span class="kt">int32_t</span> <span class="n">exponent</span> <span class="o">=</span> <span class="n">e4m3_exponent</span> <span class="o">-</span> <span class="mi">7</span><span class="p">;</span>
     <span class="kt">uint32_t</span> <span class="n">float_exponent</span> <span class="o">=</span> <span class="n">exponent</span> <span class="o">+</span> <span class="mi">127</span><span class="p">;</span>
     <span class="kt">uint32_t</span> <span class="n">result</span><span class="p">;</span>
     <span class="kt">float</span> <span class="n">floatValue</span><span class="p">;</span>

     <span class="k">if</span> <span class="p">(</span><span class="n">e4m3_exponent</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
         <span class="c1">// normal number</span>
         <span class="n">result</span> <span class="o">=</span>  <span class="n">sign</span> <span class="o">&lt;&lt;</span> <span class="mi">31</span> <span class="o">|</span> <span class="n">float_exponent</span> <span class="o">&lt;&lt;</span> <span class="mi">23</span> <span class="o">|</span> <span class="n">e4m3_mantissa</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="mi">23</span> <span class="o">-</span> <span class="mi">3</span><span class="p">);</span>
     <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
         <span class="c1">// sub-normal number</span>
         <span class="k">if</span> <span class="p">(</span><span class="n">e4m3_mantissa</span> <span class="o">&gt;=</span> <span class="mh">0x4</span><span class="p">)</span> <span class="p">{</span>
             <span class="c1">// 2^-7</span>
           <span class="n">result</span> <span class="o">=</span> <span class="n">sign</span> <span class="o">&lt;&lt;</span> <span class="mi">31</span> <span class="o">|</span> <span class="p">(</span><span class="n">float_exponent</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">23</span> <span class="o">|</span> <span class="p">(</span><span class="n">e4m3_mantissa</span> <span class="o">&amp;</span> <span class="mh">0x3</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="mi">23</span> <span class="o">-</span><span class="mi">2</span><span class="p">);</span>

         <span class="p">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">e4m3_mantissa</span> <span class="o">&gt;</span> <span class="mh">0x1</span><span class="p">)</span> <span class="p">{</span>
             <span class="c1">// 2^-8</span>
           <span class="n">result</span> <span class="o">=</span> <span class="n">sign</span> <span class="o">&lt;&lt;</span> <span class="mi">31</span> <span class="o">|</span> <span class="p">(</span><span class="n">float_exponent</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">23</span> <span class="o">|</span> <span class="p">(</span><span class="n">e4m3_mantissa</span> <span class="o">&amp;</span> <span class="mh">0x1</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="mi">23</span> <span class="o">-</span><span class="mi">1</span><span class="p">);</span>

         <span class="p">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">e4m3_mantissa</span> <span class="o">==</span> <span class="mh">0x1</span><span class="p">)</span> <span class="p">{</span>
             <span class="c1">// 2^-9</span>
           <span class="n">result</span> <span class="o">=</span> <span class="n">sign</span> <span class="o">&lt;&lt;</span> <span class="mi">31</span> <span class="o">|</span> <span class="p">(</span><span class="n">float_exponent</span> <span class="o">-</span> <span class="mi">2</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">23</span><span class="p">;</span>
         <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
             <span class="c1">// return out of range</span>
           <span class="k">return</span> <span class="n">std</span><span class="o">::</span><span class="n">nanf</span><span class="p">(</span><span class="s">""</span><span class="p">);</span>
         <span class="p">}</span>

     <span class="p">}</span>
     <span class="n">floatValue</span> <span class="o">=</span> <span class="o">*</span><span class="k">reinterpret_cast</span><span class="o">&lt;</span><span class="kt">float</span><span class="o">*&gt;</span><span class="p">(</span><span class="o">&amp;</span><span class="n">result</span><span class="p">);</span>
     <span class="k">return</span> <span class="n">floatValue</span><span class="p">;</span>

 <span class="p">}</span>

 <span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
     <span class="kt">uint32_t</span> <span class="n">temp</span><span class="p">;</span>
     <span class="kt">char</span> <span class="n">cont</span> <span class="o">=</span> <span class="sc">'y'</span><span class="p">;</span>

     <span class="c1">// Loop to repeatedly accept input</span>
     <span class="k">while</span> <span class="p">(</span><span class="n">cont</span> <span class="o">==</span> <span class="sc">'y'</span> <span class="o">||</span> <span class="n">cont</span> <span class="o">==</span> <span class="sc">'Y'</span><span class="p">)</span> <span class="p">{</span>
         <span class="c1">// Prompt the user to enter a float value</span>
         <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Enter a E4M3 value in Hex: "</span><span class="p">;</span>
         <span class="n">std</span><span class="o">::</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">std</span><span class="o">::</span><span class="n">hex</span> <span class="o">&gt;&gt;</span> <span class="n">temp</span><span class="p">;</span>  <span class="c1">// Read input from the user</span>
         <span class="kt">uint8_t</span> <span class="n">value</span> <span class="o">=</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">uint8_t</span><span class="o">&gt;</span><span class="p">(</span><span class="n">temp</span><span class="p">);</span>

         <span class="c1">// Call the function to convert</span>
         <span class="kt">float</span> <span class="n">result</span> <span class="o">=</span> <span class="n">E4M3ToFloat</span><span class="p">(</span><span class="n">value</span><span class="p">);</span>

         <span class="c1">// Print the result</span>
         <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"float representation of E4M3 number 0x"</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">hex</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">setw</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span>
 <span class="n">setfill</span><span class="p">(</span><span class="sc">'0'</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">" is "</span> <span class="o">&lt;&lt;</span> <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>

         <span class="c1">// Ask if the user wants to continue</span>
         <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Do you want to enter another value? (y/n): "</span><span class="p">;</span>
         <span class="n">std</span><span class="o">::</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">cont</span><span class="p">;</span>  <span class="c1">// Read 'y' or 'n' for continuing or exiting</span>
     <span class="p">}</span>

     <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Exiting program."</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
     <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>  <span class="c1">// Exit successfully</span>
 <span class="p">}</span>
</code></pre></div></div> <p>Run it:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>clang++ <span class="nt">-o</span> e4m3 FP32TOFP8.cc
./e4me
Enter a float value: 0.0136719
e4m3 representation of 0.0136719 is 0x7
Do you want to enter another value? <span class="o">(</span>y/n<span class="o">)</span>: y
Enter a float value: 448
e4m3 representation of 448 is 0x7e
Do you want to enter another value? <span class="o">(</span>y/n<span class="o">)</span>: y
Enter a float value: 0.001954
e4m3 representation of 0.001954 is 0x1
Do you want to enter another value? <span class="o">(</span>y/n<span class="o">)</span>: n
</code></pre></div></div> <h2 id="fp32-to-e4m3">FP32 to E4M3</h2> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="cp">#include</span> <span class="cpf">&lt;cmath&gt;</span><span class="cp">
</span> <span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span> <span class="cp">#include</span> <span class="cpf">&lt;cstdlib&gt;</span><span class="cp">
</span>
 <span class="kt">uint8_t</span> <span class="nf">FloatToE4M3</span><span class="p">(</span><span class="kt">float</span> <span class="n">value</span><span class="p">)</span> <span class="p">{</span>
     <span class="c1">// Handle special cases (NaN and Infinity)</span>
     <span class="k">if</span> <span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">isnan</span><span class="p">(</span><span class="n">value</span><span class="p">))</span> <span class="k">return</span> <span class="mh">0xFF</span><span class="p">;</span>  <span class="c1">// NaN is 0xFF in e4m3</span>
     <span class="k">if</span> <span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">isinf</span><span class="p">(</span><span class="n">value</span><span class="p">))</span> <span class="k">return</span> <span class="p">(</span><span class="n">value</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="o">?</span> <span class="mh">0x7F</span> <span class="o">:</span> <span class="mh">0xFF</span><span class="p">;</span>  <span class="c1">// Infinity, 0x7F for +Inf, 0xFF for -Inf</span>

     <span class="c1">// Handle zero case</span>
     <span class="k">if</span> <span class="p">(</span><span class="n">value</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="mh">0x00</span><span class="p">;</span>  <span class="c1">// Zero is 0x00 in e4m3</span>
     <span class="c1">// Extract the sign, exponent, and mantissa of the FP32</span>
     <span class="kt">uint32_t</span> <span class="n">bits</span> <span class="o">=</span> <span class="o">*</span><span class="k">reinterpret_cast</span><span class="o">&lt;</span><span class="kt">uint32_t</span><span class="o">*&gt;</span><span class="p">(</span><span class="o">&amp;</span><span class="n">value</span><span class="p">);</span>

     <span class="c1">// Extract the sign (1 bit)</span>
     <span class="kt">uint8_t</span> <span class="n">sign</span> <span class="o">=</span> <span class="p">(</span><span class="n">bits</span> <span class="o">&gt;&gt;</span> <span class="mi">31</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0x1</span><span class="p">;</span>

     <span class="c1">// Extract the exponent (8 bits for FP32)</span>
     <span class="kt">int32_t</span> <span class="n">exponent</span> <span class="o">=</span> <span class="p">((</span><span class="n">bits</span> <span class="o">&gt;&gt;</span> <span class="mi">23</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0xFF</span><span class="p">)</span> <span class="o">-</span> <span class="mi">127</span><span class="p">;</span>  <span class="c1">// Bias for FP32 is 127</span>

     <span class="c1">// Extract the mantissa (23 bits for FP32)</span>
     <span class="kt">uint32_t</span> <span class="n">mantissa</span> <span class="o">=</span> <span class="n">bits</span> <span class="o">&amp;</span> <span class="mh">0x7FFFFF</span><span class="p">;</span>  <span class="c1">// Get the fractional part</span>

     <span class="c1">// For normal numbers, add the implicit leading 1 in the mantissa</span>
     <span class="k">if</span> <span class="p">(</span><span class="n">exponent</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">127</span><span class="p">)</span> <span class="p">{</span>
         <span class="n">mantissa</span> <span class="o">|=</span> <span class="mh">0x800000</span><span class="p">;</span>  <span class="c1">// Add the leading 1 bit for normalized values</span>
     <span class="p">}</span>

     <span class="c1">// Apply the bias for e4m3 (bias of 7)</span>
     <span class="kt">int32_t</span> <span class="n">e4m3_exponent</span> <span class="o">=</span> <span class="n">exponent</span> <span class="o">+</span> <span class="mi">7</span><span class="p">;</span>  <span class="c1">// Bias for e4m3 is 7</span>

     <span class="c1">// Handle exponent out of range (e4m3 has 4 exponent bits, max is 15)</span>
     <span class="k">if</span> <span class="p">(</span><span class="n">e4m3_exponent</span> <span class="o">&gt;</span> <span class="mi">15</span><span class="p">)</span> <span class="p">{</span>
         <span class="k">return</span> <span class="n">sign</span> <span class="o">&lt;&lt;</span> <span class="mi">7</span> <span class="o">|</span> <span class="mh">0x7F</span><span class="p">;</span>  <span class="c1">// Saturate to the NaN</span>
         <span class="c1">//return sign &lt;&lt; 7 | 0x7E;  // Saturate to the max value (S.1111.110 = S.448)</span>
     <span class="p">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="p">((</span><span class="n">e4m3_exponent</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">3</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">e4m3_exponent</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">))</span> <span class="p">{</span>
         <span class="c1">// Subnormal numbers (exponent is 0)</span>
         <span class="c1">// For subnormal numbers, the mantissa is shifted and stored directly</span>
         <span class="kt">uint8_t</span> <span class="n">shift_bits</span> <span class="o">=</span> <span class="p">(</span><span class="mi">3</span> <span class="o">+</span> <span class="n">e4m3_exponent</span><span class="p">);</span>
         <span class="c1">// Add 1 bit in front of mantissa then shift it</span>
         <span class="kt">uint8_t</span> <span class="n">e4m3_mantissa</span> <span class="o">=</span> <span class="p">(</span><span class="n">mantissa</span> <span class="o">&gt;&gt;</span> <span class="p">(</span><span class="mi">24</span> <span class="o">-</span> <span class="n">shift_bits</span><span class="p">))</span> <span class="o">&amp;</span> <span class="p">(</span><span class="mh">0x7</span> <span class="o">&gt;&gt;</span> <span class="p">(</span><span class="mi">0</span><span class="o">-</span><span class="n">e4m3_exponent</span><span class="p">));</span>  <span class="c1">//Shift to get the top N bits (3 to 1)</span>
         <span class="k">return</span> <span class="n">sign</span> <span class="o">&lt;&lt;</span> <span class="mi">7</span> <span class="o">|</span> <span class="mh">0x00</span> <span class="o">|</span> <span class="n">e4m3_mantissa</span><span class="p">;</span>  <span class="c1">// Exponent is 0 for subnormal numbers</span>
     <span class="p">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">e4m3_exponent</span> <span class="o">&lt;=</span> <span class="o">-</span><span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
         <span class="c1">// Saturate to 0</span>
         <span class="k">return</span> <span class="n">sign</span> <span class="o">&lt;&lt;</span> <span class="mi">7</span> <span class="o">|</span> <span class="mh">0x00</span><span class="p">;</span>
     <span class="p">}</span>

     <span class="c1">// For normal numbers, normalize mantissa to fit into 3 bits (e4m3 has 3 bits for mantissa)</span>
     <span class="kt">uint8_t</span> <span class="n">e4m3_mantissa</span> <span class="o">=</span> <span class="p">(</span><span class="n">mantissa</span> <span class="o">&gt;&gt;</span> <span class="p">(</span><span class="mi">23</span> <span class="o">-</span> <span class="mi">3</span><span class="p">))</span> <span class="o">&amp;</span> <span class="mh">0x07</span><span class="p">;</span>  <span class="c1">// Shift to get the top 3 bits</span>

     <span class="c1">// Pack the sign, exponent, and mantissa into an 8-bit value</span>
     <span class="kt">uint8_t</span> <span class="n">result</span> <span class="o">=</span> <span class="p">(</span><span class="n">sign</span> <span class="o">&lt;&lt;</span> <span class="mi">7</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="n">e4m3_exponent</span> <span class="o">&lt;&lt;</span> <span class="mi">3</span><span class="p">)</span> <span class="o">|</span> <span class="n">e4m3_mantissa</span><span class="p">;</span>

     <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
 <span class="p">}</span>

 <span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
     <span class="kt">float</span> <span class="n">value</span><span class="p">;</span>
     <span class="kt">char</span> <span class="n">cont</span> <span class="o">=</span> <span class="sc">'y'</span><span class="p">;</span>

     <span class="c1">// Loop to repeatedly accept input</span>
     <span class="k">while</span> <span class="p">(</span><span class="n">cont</span> <span class="o">==</span> <span class="sc">'y'</span> <span class="o">||</span> <span class="n">cont</span> <span class="o">==</span> <span class="sc">'Y'</span><span class="p">)</span> <span class="p">{</span>
         <span class="c1">// Prompt the user to enter a float value</span>
         <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Enter a float value: "</span><span class="p">;</span>
         <span class="n">std</span><span class="o">::</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">value</span><span class="p">;</span>  <span class="c1">// Read input from the user</span>

         <span class="c1">// Call the function to convert the float value to e4m3</span>
         <span class="kt">uint8_t</span> <span class="n">e4m3</span> <span class="o">=</span> <span class="n">FloatToE4M3</span><span class="p">(</span><span class="n">value</span><span class="p">);</span>

         <span class="c1">// Print the result</span>
         <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"e4m3 representation of "</span> <span class="o">&lt;&lt;</span> <span class="n">value</span> <span class="o">&lt;&lt;</span> <span class="s">" is 0x"</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">hex</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">e4m3</span> <span class="o">&lt;&lt;</span>
 <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>

         <span class="c1">// Ask if the user wants to continue</span>
         <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Do you want to enter another value? (y/n): "</span><span class="p">;</span>
         <span class="n">std</span><span class="o">::</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">cont</span><span class="p">;</span>  <span class="c1">// Read 'y' or 'n' for continuing or exiting</span>
     <span class="p">}</span>

     <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Exiting program."</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
     <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>  <span class="c1">// Exit successfully</span>
 <span class="p">}</span>
</code></pre></div></div> <p>Run it:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>clang++ <span class="nt">-o</span> fp32 FP32TOFP8.cc
./fp32
Enter a E4M3 value <span class="k">in </span>Hex: 7e
float representation of E4M3 number 0x7e is 448
Do you want to enter another value? <span class="o">(</span>y/n<span class="o">)</span>: y
Enter a E4M3 value <span class="k">in </span>Hex: 07
float representation of E4M3 number 0x07 is 0.0136719
Do you want to enter another value? <span class="o">(</span>y/n<span class="o">)</span>: y
Enter a E4M3 value <span class="k">in </span>Hex: 08
float representation of E4M3 number 0x08 is 0.015625
Do you want to enter another value? <span class="o">(</span>y/n<span class="o">)</span>: n
</code></pre></div></div>]]></content><author><name>xyzzhangfan</name></author><category term="FP8"/><summary type="html"><![CDATA[Goal Open Computing Project (OCP) announced OCP 8-bit Floating Point Specification (OFP8). This post discusses how to convert FP32 to FP8(E4M3) and FP8(E4M3) back to FP32.]]></summary></entry><entry><title type="html">Setup the working environment</title><link href="https://xyzzhangfan.github.io/blog/2024/Working_environment_setup/" rel="alternate" type="text/html" title="Setup the working environment"/><published>2024-08-27T00:00:00+00:00</published><updated>2024-08-27T00:00:00+00:00</updated><id>https://xyzzhangfan.github.io/blog/2024/Working_environment_setup</id><content type="html" xml:base="https://xyzzhangfan.github.io/blog/2024/Working_environment_setup/"><![CDATA[<h2 id="goal">Goal</h2> <ol> <li>Install and setup <code class="language-plaintext highlighter-rouge">Oh-my-zsh</code> with plugins.</li> <li>Install and setup VIM with plugins.</li> <li>Install and setup git.</li> <li>Install <code class="language-plaintext highlighter-rouge">Oh-my-TMUX</code>.</li> <li>Use ctag to generate tags for vim</li> </ol> <h2 id="install-and-setup-oh-my-zsh">Install and setup <code class="language-plaintext highlighter-rouge">Oh-my-zsh</code>:</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  sh <span class="nt">-c</span> <span class="s2">"</span><span class="si">$(</span>curl <span class="nt">-fsSL</span> https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class="si">)</span><span class="s2">"</span>
</code></pre></div></div> <h2 id="install-plugins-for-oh-my-zsh">Install plugins for <code class="language-plaintext highlighter-rouge">Oh-my-zsh</code>:</h2> <ol> <li>Install the theme Powerline10k: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> git clone <span class="nt">--depth</span><span class="o">=</span>1 https://github.com/romkatv/powerlevel10k.git <span class="k">${</span><span class="nv">ZSH_CUSTOM</span><span class="k">:-</span><span class="nv">$HOME</span><span class="p">/.oh-my-zsh/custom</span><span class="k">}</span>/themes/powerlevel10k
</code></pre></div> </div> </li> <li>Install plugin zsh-autosuggestions: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> git clone https://github.com/zsh-users/zsh-autosuggestions <span class="k">${</span><span class="nv">ZSH_CUSTOM</span><span class="k">:-</span><span class="p">~/.oh-my-zsh/custom</span><span class="k">}</span>/plugins/zsh-autosuggestions
</code></pre></div> </div> </li> <li>Install plugin zsh-syntax-highlighting: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> git clone https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="k">${</span><span class="nv">ZSH_CUSTOM</span><span class="k">:-</span><span class="p">~/.oh-my-zsh/custom</span><span class="k">}</span>/plugins/zsh-syntax-highlighting
</code></pre></div> </div> </li> <li>update the plugin section in your ~/.zshrc file: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">ZSH_THEME</span><span class="o">=</span><span class="s2">"powerlevel10k/powerlevel10k"</span> <span class="c">#place your theme with powerline10k</span>
 <span class="nv">plugins</span><span class="o">=(</span> 
   <span class="c"># other plugins...</span>
   zsh-syntax-highlighting
   zsh-autosuggestions<span class="o">)</span>
   <span class="nv">ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE</span><span class="o">=</span><span class="s2">"fg=#19a9ec,bold,underline"</span>
   <span class="nb">source</span> <span class="nv">$ZSH</span>/oh-my-zsh.sh
   <span class="c"># Bindkey</span>
   bindkey <span class="s1">'^j'</span> autosuggest-accept <span class="c"># ctrl+j to accept suggestion.</span>
</code></pre></div> </div> </li> <li>Install the Tmux2 plugin(optional): <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">plugins</span><span class="o">=(</span>
   <span class="c"># other plugins</span>
   tmux
 <span class="o">)</span>
 <span class="nv">ZSH_TMUX_AUTOSTART</span><span class="o">=</span><span class="nb">true</span> <span class="c"># auto start tmux session.</span>
</code></pre></div> </div> <h2 id="install-vimnvim-with-plugins">Install Vim/nvim with plugins:</h2> </li> </ol> <p>[!note] Some plugins such as verible-verilog-ls needs VIM9 to show the warning during editing.</p> <ol> <li>nvim could be easily installed on ubuntu: <code class="language-plaintext highlighter-rouge">sudo apt install neovim</code></li> <li>nvim could use your ~/.vimrc file by adding following into your <code class="language-plaintext highlighter-rouge">~/.config/nvim/init.vim</code>: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">set </span>runtimepath^<span class="o">=</span>~/.vim runtimepath+<span class="o">=</span>~/.vim/after
 <span class="nb">let</span> &amp;packpath<span class="o">=</span>&amp;runtimepath
 <span class="nb">source</span> ~/.vimrc
</code></pre></div> </div> </li> <li>Install Vundle to manage VIM plugins: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
</code></pre></div> </div> <p>put the following into your <code class="language-plaintext highlighter-rouge">~/.vimrc</code>, create the file if you don’t have one.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> set tabstop = 2
 set shiftwidth = 2
 set expandtab = 2
 syntax enable
 set nocompatible              " be iMproved, required
 filetype off                  " required
 let mapleader = ","
 let g:NERDTreeWinPos = "bottom"
 let NERDTreeShowHidden = 0
 let NERDTreeIgnore = ['\.pyc$', '__pycache__']
 let g:NERDTreeWinSize = 15
 map &lt;leader&gt;nn :NERDTreeToggle&lt;cr&gt;
 map &lt;leader&gt;nb :NERDTreeFromBookmark
 map &lt;leader&gt;nf :NERDTreeFind&lt;cr&gt;
 map &lt;leader&gt;f  :Files&lt;CR&gt;
 " set the runtime path to include Vundle and initialize
 set rtp+=~/.vim/bundle/Vundle.vim
 call vundle#begin()
 " alternatively, pass a path where Vundle should install plugins
 "call vundle#begin('~/some/path/here')

 " let Vundle manage Vundle, required

 " My vim plugins:
 Plugin 'VundleVim/Vundle.vim'
 Plugin 'preservim/nerdcommenter'
 Plugin 'preservim/nerdtree'
 Plugin 'jiangmiao/auto-pairs'
 Plugin 'skywind3000/vim-auto-popmenu'
 Plugin 'airblade/vim-gitgutter'
 Plugin 'prabirshrestha/vim-lsp'
 Plugin 'junegunn/fzf'
 Plugin 'junegunn/fzf.vim'

 " All of your Plugins must be added before the following line
 call vundle#end()            " required
 filetype plugin indent on    " required
 " To ignore plugin indent changes, instead use:
 "filetype plugin on
 inoremap &lt;expr&gt; &lt;Tab&gt;  pumvisible() ? "\&lt;C-n&gt;" : "\&lt;Tab&gt;"
 inoremap &lt;expr&gt; &lt;S-Tab&gt;  pumvisible() ? "\&lt;C-p&gt;" : "\&lt;S-Tab&gt;"
 set completeopt=menu,menuone,noselect

 "
 " Brief help
 " :PluginList       - lists configured plugins
 " :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
 " :PluginSearch foo - searches for foo; append `!` to refresh local cache
 " :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
 "
 " see :h vundle for more details or wiki for FAQ
 " Put your non-Plugin stuff after this line
 " This section to the end is optional, add it if you want to use verible-verilog-ls with vim.
 if executable('verible-verilog-ls')
     au User lsp_setup call lsp#register_server({
         \ 'name': 'verible-verilog-ls',
         \ 'cmd': {server_info-&gt;[PATH_TO_VERIBLE_VERILOG_LS]},
         \ 'allowlist': ['verilog', 'systemverilog'],
         \ })
 endif
 function! s:on_lsp_buffer_enabled() abort
   setlocal omnifunc=lsp#complete
   setlocal signcolumn=yes
   if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
   nmap &lt;buffer&gt; gd &lt;plug&gt;(lsp-definition)
   nmap &lt;buffer&gt; gs &lt;plug&gt;(lsp-document-symbol-search)
   nmap &lt;buffer&gt; gS &lt;plug&gt;(lsp-workspace-symbol-search)
   nmap &lt;buffer&gt; gr &lt;plug&gt;(lsp-references)
   nmap &lt;buffer&gt; gi &lt;plug&gt;(lsp-implementation)
   nmap &lt;buffer&gt; gt &lt;plug&gt;(lsp-type-definition)
   nmap &lt;buffer&gt; &lt;leader&gt;rn &lt;plug&gt;(lsp-rename)
   nmap &lt;buffer&gt; [g &lt;plug&gt;(lsp-previous-diagnostic)
   nmap &lt;buffer&gt; ]g &lt;plug&gt;(lsp-next-diagnostic)
   nmap &lt;buffer&gt; K &lt;plug&gt;(lsp-hover)
   nnoremap &lt;buffer&gt; &lt;expr&gt;&lt;c-f&gt; lsp#scroll(+4)
   nnoremap &lt;buffer&gt; &lt;expr&gt;&lt;c-d&gt; lsp#scroll(-4)

   let g:lsp_format_sync_timeout = 1000
   autocmd! BufWritePre *.rs,*.go call execute('LspDocumentFormatSync')
        
   " refer to doc to add more commands
 endfunction

 augroup lsp_install
     au!
     " call s:on_lsp_buffer_enabled only for languages that has the server registered.
     autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
 augroup END
</code></pre></div> </div> </li> </ol> <h2 id="install-and-setup-git">Install and setup git</h2> <ol> <li>Install: <code class="language-plaintext highlighter-rouge">sudo apt install git-all</code></li> <li>Setup: <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> git config --global --get user.email
 git config --global pull.rebase true
 git config --global diff.tool vimdiff
 git config --global difftool.prompt false
 git config merge.tool vimdiff
 git config merge.conflictstyle diff3
 git config mergetool.prompt false
</code></pre></div> </div> <p>[!note] Use <code class="language-plaintext highlighter-rouge">git log --all --decorate --oneline --graph</code> to show a nice git commit history.</p> </li> </ol> <h2 id="install-tmux">Install Tmux</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nv">$ </span>git clone https://github.com/gpakosz/.tmux.git <span class="s2">"/path/to/oh-my-tmux"</span>
  <span class="nv">$ </span><span class="nb">mkdir</span> <span class="nt">-p</span> <span class="s2">"~/.config/tmux"</span>
  <span class="nv">$ </span><span class="nb">ln</span> <span class="nt">-s</span> <span class="s2">"/path/to/oh-my-tmux/.tmux.conf"</span> <span class="s2">"~/.config/tmux/tmux.conf"</span>
  <span class="nv">$ </span><span class="nb">cp</span> <span class="s2">"/path/to/oh-my-tmux/.tmux.conf.local"</span> <span class="s2">"~/.config/tmux/tmux.conf.local"</span>
</code></pre></div></div> <h2 id="install-ctags-with-vim">Install ctags with VIM</h2> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```bash
  $ git clone https://github.com/universal-ctags/ctags.git
  $ cd ctags
  $ ./autogen.sh
  $ ./configure  # use --prefix=/where/you/want to override installation directory, defaults to /usr/local
  $ make
  $ make install # may require extra privileges depending on where to install
```
Get into the root directory of your project and run ```ctags -R *``` to generate the tags file.

Put following line into your `~/.vimrc` file to automatically load the tags file:
```bash
set tags=./tags;,tags;
```
</code></pre></div></div> <p>Now you can use <code class="language-plaintext highlighter-rouge">ctrl + ]</code> to jump to the defination of function/variable. Use <code class="language-plaintext highlighter-rouge">ctrl+ t</code> to go back.</p> <p>[!note] Added <code class="language-plaintext highlighter-rouge">nnoremap &lt;C-]&gt; :tag &lt;C-R&gt;&lt;C-W&gt;&lt;CR&gt;</code> into your <code class="language-plaintext highlighter-rouge">~/.vimrc</code> to avoid the lazy load of tags file. Now you can use <code class="language-plaintext highlighter-rouge">ctrl + ]</code> to jump to the defination of function/variable. Use <code class="language-plaintext highlighter-rouge">ctrl+ t</code> to go back.</p> <p>[!note]Added <code class="language-plaintext highlighter-rouge">nnoremap &lt;C-]&gt; :tag &lt;C-R&gt;&lt;C-W&gt;&lt;CR&gt;</code> into your <code class="language-plaintext highlighter-rouge">~/.vimrc</code> to avoid the lazy load of tags file.</p>]]></content><author><name>xyzzhangfan</name></author><category term="Linux"/><summary type="html"><![CDATA[Goal Install and setup Oh-my-zsh with plugins. Install and setup VIM with plugins. Install and setup git. Install Oh-my-TMUX. Use ctag to generate tags for vim]]></summary></entry><entry><title type="html">Socks proxy over V2ray</title><link href="https://xyzzhangfan.github.io/blog/2023/Proxy-Over-V2ray/" rel="alternate" type="text/html" title="Socks proxy over V2ray"/><published>2023-12-25T00:00:00+00:00</published><updated>2023-12-25T00:00:00+00:00</updated><id>https://xyzzhangfan.github.io/blog/2023/Proxy%20Over%20V2ray</id><content type="html" xml:base="https://xyzzhangfan.github.io/blog/2023/Proxy-Over-V2ray/"><![CDATA[<h2 id="goal">Goal:</h2> <ul> <li>Server A: A cloud server(i.e. AWS/Google Cloud/Oracle Cloud) with public IP address</li> <li>Server B: A internal server which may need vpn for access.</li> <li>Client C: A personal labtop/desktop trying to access the Server B without typing password to VPN everytime.</li> </ul> <h2 id="method">Method:</h2> <ol> <li>Server B using ssh reverse proxy connect to server A and bind to a port (i.e. 12345).</li> <li>Using the -D flag in ssh to setup Socks5 proxy.</li> <li>Setup V2ray on Server A and route all the V2ray traffic through the ssh turnnel.</li> </ol> <h2 id="on-server-a">On Server A:</h2> <ol> <li>Install V2Ray <blockquote> <p>bash -c “$(curl -L https:/github.com/v2fly/fhs-install-v2ray/raw/master/install-release.sh)”</p> </blockquote> </li> <li>Generate uuid <blockquote> <p>v2ray uuid</p> </blockquote> </li> <li>Setup config.json</li> </ol> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"inbounds"</span><span class="p">:</span><span class="w"> </span><span class="p">[{</span><span class="w">
    </span><span class="nl">"port"</span><span class="p">:</span><span class="w">  </span><span class="s2">"YOUR_PORT"</span><span class="p">,</span><span class="w"> </span><span class="err">//</span><span class="w"> </span><span class="err">Your</span><span class="w"> </span><span class="err">desired</span><span class="w"> </span><span class="err">port</span><span class="w">
    </span><span class="nl">"protocol"</span><span class="p">:</span><span class="w"> </span><span class="s2">"vmess"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"settings"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"clients"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
          </span><span class="nl">"id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"YOUR_UUID"</span><span class="p">,</span><span class="w"> </span><span class="err">//</span><span class="w"> </span><span class="err">Replace</span><span class="w"> </span><span class="err">with</span><span class="w"> </span><span class="err">a</span><span class="w"> </span><span class="err">generated</span><span class="w"> </span><span class="err">UUID</span><span class="w">
          </span><span class="nl">"alterId"</span><span class="p">:</span><span class="w"> </span><span class="mi">64</span><span class="w">
        </span><span class="p">}</span><span class="w">
      </span><span class="p">]</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"streamSettings"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"network"</span><span class="p">:</span><span class="w"> </span><span class="s2">"tcp"</span><span class="w"> </span><span class="err">//</span><span class="w"> </span><span class="err">This</span><span class="w"> </span><span class="err">can</span><span class="w"> </span><span class="err">be</span><span class="w"> </span><span class="err">tcp</span><span class="p">,</span><span class="w"> </span><span class="err">kcp</span><span class="p">,</span><span class="w"> </span><span class="err">ws</span><span class="w"> </span><span class="err">(WebSocket)</span><span class="p">,</span><span class="w"> </span><span class="err">http</span><span class="p">,</span><span class="w"> </span><span class="err">etc.</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">}],</span><span class="w">

    </span><span class="nl">"outbounds"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="nl">"protocol"</span><span class="p">:</span><span class="w"> </span><span class="s2">"socks"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"settings"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"servers"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
          </span><span class="p">{</span><span class="w">
            </span><span class="nl">"address"</span><span class="p">:</span><span class="w"> </span><span class="s2">"127.0.0.1"</span><span class="p">,</span><span class="w">  </span><span class="err">//</span><span class="w"> </span><span class="err">Localhost</span><span class="p">,</span><span class="w"> </span><span class="err">where</span><span class="w"> </span><span class="err">the</span><span class="w"> </span><span class="err">SSH</span><span class="w"> </span><span class="err">tunnel</span><span class="w"> </span><span class="err">is</span><span class="w"> </span><span class="err">established</span><span class="w">
            </span><span class="nl">"port"</span><span class="p">:</span><span class="w"> </span><span class="mi">1080</span><span class="w">  </span><span class="err">//</span><span class="w"> </span><span class="err">The</span><span class="w"> </span><span class="err">local</span><span class="w"> </span><span class="err">port</span><span class="w"> </span><span class="err">where</span><span class="w"> </span><span class="err">the</span><span class="w"> </span><span class="err">SSH</span><span class="w"> </span><span class="err">tunnel's</span><span class="w"> </span><span class="err">SOCKS</span><span class="w"> </span><span class="err">proxy</span><span class="w"> </span><span class="err">is</span><span class="w"> </span><span class="err">listening</span><span class="w">
          </span><span class="p">}</span><span class="w">
        </span><span class="p">]</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="nl">"tag"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ssh"</span><span class="w">  </span><span class="err">//</span><span class="w"> </span><span class="err">Optional</span><span class="w"> </span><span class="err">tag</span><span class="w"> </span><span class="err">for</span><span class="w"> </span><span class="err">identifying</span><span class="w"> </span><span class="err">this</span><span class="w"> </span><span class="err">outbound</span><span class="w">
    </span><span class="p">},</span><span class="w">
	</span><span class="p">{</span><span class="w">
    </span><span class="nl">"protocol"</span><span class="p">:</span><span class="w"> </span><span class="s2">"freedom"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"settings"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">

</span></code></pre></div></div> <ol> <li>Validate config file <blockquote> <p>v2ray test -c /usr/local/etc/v2ray/config.json</p> </blockquote> </li> <li>Socks5 proxy over ssh <blockquote> <p>ssh -D 1080 user_on_server_B@localhost -p 12345</p> </blockquote> </li> <li>Start v2ray service <blockquote> <p>sudo systemctl start v2ray</p> </blockquote> </li> <li>Personal laptop (Client C) connect to v2ray server and access to internal resources . <blockquote> <p>Remember to expose your server port, i.e., the 12345 port on your cloud server. if still not working, reset the firewall rules:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>iptables <span class="nt">-F</span>
<span class="nb">sudo </span>iptables <span class="nt">-X</span>
</code></pre></div> </div> </blockquote> </li> </ol> <h2 id="pre-request-using-ssh-for-reverse-proxy-on-server-b">Pre-request using ssh for reverse proxy (On Server B):</h2> <ol> <li>Install autossh on server B <blockquote> <p>sudo apt install autossh 1.1 install without sudo</p> </blockquote> </li> <li>Reverse proxy to cloud vps with -R</li> </ol> <blockquote> <p>autossh -M 22222 -NfR 0.0.0.0:12345:22 user_on_server_A@remote_server_A</p> </blockquote> <ol> <li>Gateways and TCP forwarding <blockquote> <p>Uncomment the following and set to yes in /etc/ssh/sshd_config AllowTcpForwarding yes GatewayPorts yes</p> </blockquote> </li> </ol>]]></content><author><name>xyzzhangfan</name></author><category term="Linux"/><summary type="html"><![CDATA[Goal: Server A: A cloud server(i.e. AWS/Google Cloud/Oracle Cloud) with public IP address Server B: A internal server which may need vpn for access. Client C: A personal labtop/desktop trying to access the Server B without typing password to VPN everytime.]]></summary></entry><entry><title type="html">Docker Insufficient shared memory (shm) Error</title><link href="https://xyzzhangfan.github.io/blog/2023/Docker_insuffcient_memory-error/" rel="alternate" type="text/html" title="Docker Insufficient shared memory (shm) Error"/><published>2023-10-27T00:00:00+00:00</published><updated>2023-10-27T00:00:00+00:00</updated><id>https://xyzzhangfan.github.io/blog/2023/Docker_insuffcient_memory%20error</id><content type="html" xml:base="https://xyzzhangfan.github.io/blog/2023/Docker_insuffcient_memory-error/"><![CDATA[<p>When I running a training experiment in docker I got the following error message:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ERROR: Unexpected bus error encountered in worker. This might be caused by insufficient shared memory (shm).
</code></pre></div></div> <p>The solution is adding the argument “–ipc=host” when running the docker container.</p> <p>References:</p> <ul> <li>https://docs.docker.com/engine/reference/run/#ipc-settings—ipc</li> <li>https://discuss.pytorch.org/t/training-crashes-due-to-insufficient-shared-memory-shm-nn-dataparallel/26396</li> </ul>]]></content><author><name>xyzzhangfan</name></author><category term="Pytorch"/><category term="Nvidia"/><category term="Docker"/><summary type="html"><![CDATA[When I running a training experiment in docker I got the following error message: ERROR: Unexpected bus error encountered in worker. This might be caused by insufficient shared memory (shm). The solution is adding the argument “–ipc=host” when running the docker container.]]></summary></entry><entry><title type="html">Nvidia Pytorch Usage</title><link href="https://xyzzhangfan.github.io/blog/2023/Nvidia-Pytorch-usage/" rel="alternate" type="text/html" title="Nvidia Pytorch Usage"/><published>2023-10-10T00:00:00+00:00</published><updated>2023-10-10T00:00:00+00:00</updated><id>https://xyzzhangfan.github.io/blog/2023/Nvidia-Pytorch-usage</id><content type="html" xml:base="https://xyzzhangfan.github.io/blog/2023/Nvidia-Pytorch-usage/"><![CDATA[<h2 id="pulling-the-docker-image">Pulling the docker image</h2> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```bash
docker pull nvcr.io/nvidia/pytorch:23.09-py3
```
</code></pre></div></div> <h2 id="runing-the-docker-with">Runing the docker with</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   docker run <span class="nt">--gpus</span> all <span class="nt">-it</span> <span class="nt">--rm</span> <span class="nt">-v</span> ./:/data nvcr.io/nvidia/pytorch:23.09-py3
</code></pre></div></div> <h2 id="importing-asp-to-test-it">Importing ASP to test it</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   python
   from apex.contrib.sparsity import ASP
</code></pre></div></div>]]></content><author><name>xyzzhangfan</name></author><category term="Pytorch"/><category term="Nvidia"/><summary type="html"><![CDATA[Pulling the docker image ```bash docker pull nvcr.io/nvidia/pytorch:23.09-py3 ``` Runing the docker with docker run --gpus all -it --rm -v ./:/data nvcr.io/nvidia/pytorch:23.09-py3 Importing ASP to test it python from apex.contrib.sparsity import ASP]]></summary></entry><entry><title type="html">Install NVmain from Github 2022</title><link href="https://xyzzhangfan.github.io/blog/2022/Install_NVmain_on_Ubuntu/" rel="alternate" type="text/html" title="Install NVmain from Github 2022"/><published>2022-01-07T00:00:00+00:00</published><updated>2022-01-07T00:00:00+00:00</updated><id>https://xyzzhangfan.github.io/blog/2022/Install_NVmain_on_Ubuntu</id><content type="html" xml:base="https://xyzzhangfan.github.io/blog/2022/Install_NVmain_on_Ubuntu/"><![CDATA[<h1 id="install-nvmain-from-github-2022">Install NVmain from Github 2022</h1> <h2 id="the-nvmain-github-reporsitory-is-outdated-if-you-try-to-compile-it-by-yourself-you-may-encounter-errors-such-as--importerror-no-module-named-gem5_scons-flipnwritecpp13135-error-implicitly-declared-constexpr-nvmnvmaddressnvmaddressconst-nvmnvmaddress-is-deprecated--werrordeprecated-copy--etc">The NVmain github reporsitory is outdated, if you try to compile it by yourself you may encounter errors such as: <code class="language-plaintext highlighter-rouge">ImportError: No module named gem5_scons:</code>, <code class="language-plaintext highlighter-rouge">FlipNWrite.cpp:131:35: error: implicitly-declared ‘constexpr NVM::NVMAddress::NVMAddress(const NVM::NVMAddress&amp;)’ is deprecated [-Werror=deprecated-copy]</code> , etc.</h2> <h2 id="the-following-steps-are-tested-on-ubuntu-2004">The following steps are tested on Ubuntu 20.04</h2> <ol> <li><code class="language-plaintext highlighter-rouge">Git clone https://github.com/SEAL-UCSB/NVmain.git</code></li> <li>install scons : <code class="language-plaintext highlighter-rouge">pip install scons</code></li> <li>if you are using python3 you need conver both SConstruct and SConscript using command <code class="language-plaintext highlighter-rouge">2to3 -w ./SConstruct</code> and <code class="language-plaintext highlighter-rouge">2to3 -w ./SConscript</code></li> <li>Comment out <code class="language-plaintext highlighter-rouge">from gem5_scons import Transform</code> from 36 lines in <code class="language-plaintext highlighter-rouge">./SConscript</code></li> <li>Add the following CCFLAG in to SConstruct to avoid error: <code class="language-plaintext highlighter-rouge">env.Append(CCFLAGS='-Wno-error=deprecated-copy')</code> I am using fast mode so I add it at 35 line. Ref: (https://stackoverflow.com/questions/51863588/warning-definition-of-implicit-copy-constructor-is-deprecated)</li> <li>Run <code class="language-plaintext highlighter-rouge">scons --build-type=fast to build NVmain</code></li> <li>Test <code class="language-plaintext highlighter-rouge">./nvmain.fast Config/PCM_ISSCC_2012_4GB.config</code><img src="https://raw.githubusercontent.com/xyzzhangfan/pictures/main/img/Screen%20Shot%202022-01-07%20at%2011.09.18%20AM.png" alt="Screen Shot 2022-01-07 at 11.09.18 AM"/></li> </ol>]]></content><author><name>xyzzhangfan</name></author><category term="NVmain"/><category term="Memory"/><category term="Linux"/><summary type="html"><![CDATA[Install NVmain from Github 2022]]></summary></entry><entry><title type="html">How to measure the power in Cadence Virtuoso</title><link href="https://xyzzhangfan.github.io/blog/2021/Cadence_power/" rel="alternate" type="text/html" title="How to measure the power in Cadence Virtuoso"/><published>2021-08-13T00:00:00+00:00</published><updated>2021-08-13T00:00:00+00:00</updated><id>https://xyzzhangfan.github.io/blog/2021/Cadence_power</id><content type="html" xml:base="https://xyzzhangfan.github.io/blog/2021/Cadence_power/"><![CDATA[<h2 id="how-to-measure-the-power-in-cadence-virtuoso">How to measure the power in Cadence Virtuoso</h2> <p>1. In ADE-L choose Outputs –&gt; Save All</p> <p><img src="https://raw.githubusercontent.com/xyzzhangfan/pictures/main/img/20210813194158.png" alt="Screen Shot 2021-08-13 at 7.37.49 PM"/></p> <p>2. Select the pwr in output.</p> <p><img src="https://raw.githubusercontent.com/xyzzhangfan/pictures/main/img/20210813194211.png" alt="Screen Shot 2021-08-13 at 7.36.53 PM" width="100%"/></p> <p>3. Run the simulation, in the wave window select Browser –&gt; Results –&gt; Opern Results,. Then select the pdf file.</p> <p><img src="https://raw.githubusercontent.com/xyzzhangfan/pictures/main/img/20210813194225.png" alt="Screen Shot 2021-08-13 at 7.38.22 PM"/></p> <p>4. In the resule browse windows, select tran to see the total power(pwr) or instance power(@[instance name] pwr)</p> <p><img src="https://raw.githubusercontent.com/xyzzhangfan/pictures/main/img/20210813194234.png" alt="Screen Shot 2021-08-13 at 7.38.38 PM"/></p> <p>5. Right click pwr to open calculator for average/peak power expression.</p>]]></content><author><name>xyzzhangfan</name></author><category term="Candence Virtuoso"/><category term="Power Measurement"/><summary type="html"><![CDATA[How to measure the power in Cadence Virtuoso]]></summary></entry><entry><title type="html">Using VCS and DVE to simulate Verilog Code</title><link href="https://xyzzhangfan.github.io/blog/2021/VCS-tutorial/" rel="alternate" type="text/html" title="Using VCS and DVE to simulate Verilog Code"/><published>2021-04-07T00:00:00+00:00</published><updated>2021-04-07T00:00:00+00:00</updated><id>https://xyzzhangfan.github.io/blog/2021/VCS-tutorial</id><content type="html" xml:base="https://xyzzhangfan.github.io/blog/2021/VCS-tutorial/"><![CDATA[<h2 id="using-vcs-and-dve-to-simulate-verilog-code">Using VCS and DVE to simulate Verilog Code</h2> <ol> <li> <p>Writing Verilog with any text editor(i.e. Vim/VS code/Sublime text)</p> </li> <li> <p>Run VCS with the following command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vcs <span class="nt">-Mupdate</span> <span class="nt">-RPP</span> <span class="nt">-v</span> <span class="o">[</span>YOU_Design_files.v] <span class="nt">-o</span> demo <span class="nt">-full64</span> <span class="nt">-debug_all</span>
<span class="c"># For example:</span>
vcs <span class="s1">'-Mupdate'</span> <span class="s1">'-RPP'</span> <span class="s1">'-sverilog'</span> <span class="s1">'stdlib_10lpe_ccs_20210527.v'</span> <span class="s1">'tb_Top_decoder_wo_scan_chain.sv'</span> <span class="s1">'Top_decoder_wo_scan_chain.sv'</span> <span class="s1">'WL_decoder_state_machine.4.0.syn.v'</span> <span class="s1">'SL_decoder_state_machine.4.0.syn.v'</span> <span class="s1">'BL_decoder_no_state_machine.4.0.syn.v'</span> <span class="s1">'Logical_part.syn.v'</span> <span class="s1">'-top'</span> <span class="s1">'tb_top_wo_scan_chain'</span> <span class="s1">'-o'</span> <span class="s1">'decoder_wo_scan_chain'</span> <span class="s1">'-full64'</span> <span class="s1">'-debug_all'</span>
</code></pre></div> </div> </li> <li> <p>A executable demo file now appared in your current folder. Run it with GUI:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./demo <span class="nt">-gui</span>
</code></pre></div> </div> </li> <li>DVE now opened with your design. Select the signals then right click them, choose add waves -&gt; new waves.</li> <li>From Simulator -&gt; Start to start the simulation, you now should have the waves.</li> </ol>]]></content><author><name>xyzzhangfan</name></author><category term="VCS"/><category term="Verilog"/><category term="Chip Design"/><summary type="html"><![CDATA[Using VCS and DVE to simulate Verilog Code]]></summary></entry><entry><title type="html">How to solve the error &amp;lt;Errors Font Helvetica, Times-Roman is not embedded&amp;gt; in IEEE PDF eXpress</title><link href="https://xyzzhangfan.github.io/blog/2021/Solving-IEEE-PDF-eXpress-font-not-embedded/" rel="alternate" type="text/html" title="How to solve the error &amp;lt;Errors Font Helvetica, Times-Roman is not embedded&amp;gt; in IEEE PDF eXpress"/><published>2021-04-03T00:00:00+00:00</published><updated>2021-04-03T00:00:00+00:00</updated><id>https://xyzzhangfan.github.io/blog/2021/Solving-IEEE-PDF-eXpress-font-not-embedded</id><content type="html" xml:base="https://xyzzhangfan.github.io/blog/2021/Solving-IEEE-PDF-eXpress-font-not-embedded/"><![CDATA[<h2 id="how-to-solve-the-error-errors-font-helvetica--times-roman-is-not-embedded--in-ieee-pdf-express">How to solve the error “Errors: Font Helvetica, Times-Roman is not embedded “ in IEEE PDF eXpress</h2> <p>This error is due to some fonts in your uploaded PDF is not embedded. In my case, I have some figures saved as pdf format. Those figures contain the un-embedded fonts. So what I need to do is finding which figure contains the un-embedded fonts then convert it to embedded fonds. This step can be easily done by using Adobe acrobat with the following steps.</p> <ol> <li> <p>First, check the document properties by right clicking on the image then choose “Document Properties”. In the font tag you will see if there is any font is not embedded.</p> <p><img src="https://raw.githubusercontent.com/xyzzhangfan/pictures/main/img/20210403005922.png" alt="Properties"/></p> <p><img src="https://raw.githubusercontent.com/xyzzhangfan/pictures/main/img/20210403005935.png" alt="before_conversion"/></p> </li> <li> <p>Clicking the File ==&gt; Save as Other ==&gt; Optimized PDF…</p> <p><img src="https://raw.githubusercontent.com/xyzzhangfan/pictures/main/img/20210403005917.png" alt="save_as"/></p> </li> <li> <p>In the poped out new window change the marked region to “Acrobat 4.0 and later”. Then click “OK” and save it.</p> <p><img src="https://raw.githubusercontent.com/xyzzhangfan/pictures/main/img/20210403005912.png" alt="Screen Shot 2021-04-03 at 12.25.34 AM"/></p> </li> <li> <p>Open the file you just saved, and check the “Document Properties” again. You should see all fonts are embedded now.</p> <p><img src="https://raw.githubusercontent.com/xyzzhangfan/pictures/main/img/20210403005906.png" alt="after_conversion"/></p> </li> <li> <p>Re-compile your manuscript and upload to IEEE-PDF-eXpress again, you should not have this error anymore.</p> </li> </ol>]]></content><author><name>xyzzhangfan</name></author><category term="PDF"/><category term="Adobe acrobat"/><category term="IEEE PDF eXpress"/><summary type="html"><![CDATA[How to solve the error “Errors: Font Helvetica, Times-Roman is not embedded “ in IEEE PDF eXpress]]></summary></entry><entry><title type="html">Some Usefull Commands in Cadence</title><link href="https://xyzzhangfan.github.io/blog/2021/usefull_command_in_cadence/" rel="alternate" type="text/html" title="Some Usefull Commands in Cadence"/><published>2021-03-31T00:00:00+00:00</published><updated>2021-03-31T00:00:00+00:00</updated><id>https://xyzzhangfan.github.io/blog/2021/usefull_command_in_cadence</id><content type="html" xml:base="https://xyzzhangfan.github.io/blog/2021/usefull_command_in_cadence/"><![CDATA[<h3 id="unlock-file-in-cadence">Unlock file in cadence</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find <span class="nb">.</span> <span class="nt">-name</span> <span class="s1">'*.cdslck'</span> <span class="nt">-exec</span> <span class="nb">rm</span> <span class="o">{}</span> <span class="se">\;</span>
</code></pre></div></div> <hr/> <h3 id="source-ic617cshrc">Source ic617.cshrc</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s2">"alias cadence_tool 'source /usr/local/cadence/IC617.cshrc; cd ~/cadence617;virtuoso&amp;'"</span> <span class="o">&gt;&gt;</span> ~/.tcshrc
</code></pre></div></div> <hr/> <h3 id="change-default-simulator-to-spectre">Change default simulator to spectre:</h3> <p>In .cdsenv:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>asimenv.startup       simulator       string  "spectre"
</code></pre></div></div> <p>In .cdsini:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	    (if (isFile "./.cdsenv")
		(envLoadVals 
		 ?envFile "./.cdsenv"
		 ?tool "ALL"))
</code></pre></div></div> <hr/> <h3 id="add-models-in-default">add models in default:</h3> <p>In .cdsini:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>asiSetEnvOptionVal(asiGetTool('spectre) "modelFiles"
	list(
	list("/usr/local/cadence/NCSU/ncsu-cdk-1.5.1/models/spectre/standalone/tsmc25N.m")
	list("/usr/local/cadence/NCSU/ncsu-cdk-1.5.1/models/spectre/standalone/tsmc25P.m")
	)
     )
</code></pre></div></div> <hr/> <h3 id="check-the-vnc-session-number">Check the VNC session number:</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ps <span class="nt">-ef</span> | <span class="nb">grep</span> <span class="sb">`</span><span class="nb">whoami</span><span class="sb">`</span> | <span class="nb">grep </span>vnc | <span class="nb">grep </span>Xorg
</code></pre></div></div> <h3 id="kill-the-vnc-session">Kill the VNC session:</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vncserver <span class="nt">-kill</span> :&lt;Session Number&gt;
</code></pre></div></div> <hr/>]]></content><author><name>xyzzhangfan</name></author><category term="Cadence"/><category term="Linux"/><category term="bash"/><summary type="html"><![CDATA[Unlock file in cadence]]></summary></entry></feed>